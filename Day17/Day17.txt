[ 리스트(List) ]
Collection(Interface) -> List(Interface) -> Array List / Linked List
	              -> Set
Map도 다른 인터페이스 중 하나.
 
배열의 단점
1. 사이즈 지정 / 크기를 미리 알고 있어야 한다. 크기는 고정되어 있다.
2. 중간값을 뺴면 그대로임. 공간의 낭비
3. index기반으로 접근이 가능하다.
4. 기본 자료형(primitive type), 클래스 자료형도 담을 수 있다.
 
배열의 단점을 보완한게 리스트
리스트(List)
1. 크기가 고정되어 있지 않고, 동적으로 할당된다.
2. 중간에 있는 값을 빼면 앞으로 당겨진다. (메모리 낭비가 없다.)
3. 여러 방법으로 데이터를 다룰 수 있다.
4. 클래스 자료형만 담을 수 있다. (기본 자료형 담을 수 없음)
5. 타입 안정성을 보장한, generic을 쓸 수 있다.

java.util에 있는 List를 사용함
List<Integer> list1 = new ArrayList<>();의 형태..ㅎ
list1.toString() = 츨력
가져오는게 빠름. 삭제 좋음. 삽입시에는 느림. 설렉트 괜츈..
 
Linked-List
가죠오는게 느림. 데이터 유동적으로 넣었다 빼는게 좋은데 설렉트 노노..
 
*배열의 [i] => get(i)
Iterator 사용하기 (가리키는 거)
next() 호출 할 때마다 소비가 되므로 반복문에서 한번만 수행하는게 좋다.
리스트에서 직접 삭제가 아니고 iterator의 remove로 삭제해야한다.
 
저장되는건지 리턴이 있는건지 확인하고 써야한당
